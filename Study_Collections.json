{
	"info": {
		"_postman_id": "a2a465bd-c758-406b-b9e2-64272f9554b6",
		"name": "Study_Collections",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23032092"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var random = Math.random().toString(36).substring(2);",
							"",
							"var email=\"stella\"+random+\"@gmail.com\";",
							"var name =\"stella\"+random;",
							"",
							"pm.environment.set(\"email\", email);",
							"pm.environment.set(\"name\", name);",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"user_id\",data.id);",
							"",
							"pm.test(\"Status code is 201\", ()=>{",
							"pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "686dbc5adefdba4b595bb02efdb29613a90a8a47e347b9f3ea07aa0a352f5acc",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"gender\": \"male\",\n    \"email\": \"{{email}}\",\n    \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/public/v2/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validating json fields\", ()=>{",
							"var data = pm.response.json();",
							"var id= pm.environment.get(\"user_id\");",
							"pm.expect(data.id).is.eql(id)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/public/v2/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var random = Math.random().toString(36).substring(2);",
							"",
							"var email=\"stella\"+random+\"@gmail.com\";",
							"var name =\"stella\"+random;",
							"",
							"pm.environment.set(\"email\", email);",
							"pm.environment.set(\"name\", name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validating status code 200 OK\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating response time below 500\", ()=>{\r",
							"pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating response body\", ()=>{\r",
							"var data=pm.response.json();\r",
							"pm.expect(data).to.have.property(\"name\")\r",
							"pm.expect(data).to.has.property(\"email\")\r",
							"});\r",
							"\r",
							"pm.test(\"Validating headers\", ()=>{\r",
							"    var contentType = pm.response.headers.get(\"Content-Type\").split(\";\")[0];\r",
							"    pm.expect(contentType).to.eql(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Env's var\", ()=>{\r",
							"var id = pm.environment.get(\"name\");\r",
							"var dt=pm.response.json();\r",
							"var nam = dt.name\r",
							"pm.expect(nam).is.eql(id)\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"status\": \"Inactive\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/public/v2/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"pm.environment.unset(\"user_id\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/public/v2/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "686dbc5adefdba4b595bb02efdb29613a90a8a47e347b9f3ea07aa0a352f5acc",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}